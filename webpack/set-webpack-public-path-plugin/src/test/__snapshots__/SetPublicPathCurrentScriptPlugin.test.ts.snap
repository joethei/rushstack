// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
define(\\"MyLibrary\\", [], () => { return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
define(\\"MyLibrary\\", [], () => { return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
define(\\"MyLibrary\\", [], () => { return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
define(\\"MyLibrary\\", [], () => { return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "define(\\"MyLibrary\\",[],(()=>(console.log(\\"Hello world!\\"),{})));",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var r=document.currentScript;define(\\"MyLibrary\\",[],(()=>{return c={},e=r?r.src:\\"\\",c.p=e.slice(0,e.lastIndexOf(\\"/\\")+1),console.log(c.p),{};var e,c}))})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_deed8afe870a5fe703ae.js": "define(\\"MyLibrary\\",[],(()=>(console.log(\\"Hello world!\\"),{})));",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_0bde4e32a2c948a7e265.js": "(()=>{var r=document.currentScript;define(\\"MyLibrary\\",[],(()=>{return c={},e=r?r.src:\\"\\",c.p=e.slice(0,e.lastIndexOf(\\"/\\")+1),console.log(c.p),{};var e,c}))})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles amd library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "console.log(\\"Hello world!\\"),MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var r,c,e=document.currentScript;c={},r=e?e.src:\\"\\",c.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(c.p),MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_edcf84f77954338454ea.js": "console.log(\\"Hello world!\\"),MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_63bd0745dba5dd68c24d.js": "(()=>{var r,c,e=document.currentScript;c={},r=e?e.src:\\"\\",c.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(c.p),MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	var __webpack_export_target__ = (MyLibrary = typeof MyLibrary === \\"undefined\\" ? {} : MyLibrary);
/******/ 	for(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];
/******/ 	if(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, \\"__esModule\\", { value: true });
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	var __webpack_export_target__ = (MyLibrary = typeof MyLibrary === \\"undefined\\" ? {} : MyLibrary);
/******/ 	for(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];
/******/ 	if(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, \\"__esModule\\", { value: true });
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	var __webpack_export_target__ = (MyLibrary = typeof MyLibrary === \\"undefined\\" ? {} : MyLibrary);
/******/ 	for(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];
/******/ 	if(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, \\"__esModule\\", { value: true });
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	var __webpack_export_target__ = (MyLibrary = typeof MyLibrary === \\"undefined\\" ? {} : MyLibrary);
/******/ 	for(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];
/******/ 	if(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, \\"__esModule\\", { value: true });
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var e={};console.log(\\"Hello world!\\");var r=MyLibrary=\\"undefined\\"==typeof MyLibrary?{}:MyLibrary;for(var o in e)r[o]=e[o];e.__esModule&&Object.defineProperty(r,\\"__esModule\\",{value:!0})})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var r=document.currentScript;(()=>{var e,a={};e=r?r.src:\\"\\",a.p=e.slice(0,e.lastIndexOf(\\"/\\")+1);var o={};console.log(a.p);var i=MyLibrary=\\"undefined\\"==typeof MyLibrary?{}:MyLibrary;for(var n in o)i[n]=o[n];o.__esModule&&Object.defineProperty(i,\\"__esModule\\",{value:!0})})()})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_c46fa6e9dce17d2b90d4.js": "(()=>{var e={};console.log(\\"Hello world!\\");var r=MyLibrary=\\"undefined\\"==typeof MyLibrary?{}:MyLibrary;for(var o in e)r[o]=e[o];e.__esModule&&Object.defineProperty(r,\\"__esModule\\",{value:!0})})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_0cf134716f1cb00b4bfb.js": "(()=>{var r=document.currentScript;(()=>{var e,a={};e=r?r.src:\\"\\",a.p=e.slice(0,e.lastIndexOf(\\"/\\")+1);var o={};console.log(a.p);var i=MyLibrary=\\"undefined\\"==typeof MyLibrary?{}:MyLibrary;for(var n in o)i[n]=o[n];o.__esModule&&Object.defineProperty(i,\\"__esModule\\",{value:!0})})()})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles assign-properties library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	exports.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	exports.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	exports.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	exports.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "console.log(\\"Hello world!\\"),exports.MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var r,c,e=document.currentScript;c={},r=e?e.src:\\"\\",c.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(c.p),exports.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_a61d0ddd7fbc122d026c.js": "console.log(\\"Hello world!\\"),exports.MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_af50948fd9b47cdf66b5.js": "(()=>{var r,c,e=document.currentScript;c={},r=e?e.src:\\"\\",c.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(c.p),exports.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	module.exports.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	module.exports.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	module.exports.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	module.exports.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "console.log(\\"Hello world!\\"),module.exports.MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var r,e,c=document.currentScript;e={},r=c?c.src:\\"\\",e.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(e.p),module.exports.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_4618d8f04314a0c07b24.js": "console.log(\\"Hello world!\\"),module.exports.MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_1146d6514379b550ffe0.js": "(()=>{var r,e,c=document.currentScript;e={},r=c?c.src:\\"\\",e.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(e.p),module.exports.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-module library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	Object.defineProperty((exports.MyLibrary = exports.MyLibrary || {}), \\"__esModule\\", { value: true });
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	Object.defineProperty((exports.MyLibrary = exports.MyLibrary || {}), \\"__esModule\\", { value: true });
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	Object.defineProperty((exports.MyLibrary = exports.MyLibrary || {}), \\"__esModule\\", { value: true });
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	Object.defineProperty((exports.MyLibrary = exports.MyLibrary || {}), \\"__esModule\\", { value: true });
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "console.log(\\"Hello world!\\"),Object.defineProperty(exports.MyLibrary=exports.MyLibrary||{},\\"__esModule\\",{value:!0});",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var e,r,o=document.currentScript;r={},e=o?o.src:\\"\\",r.p=e.slice(0,e.lastIndexOf(\\"/\\")+1),console.log(r.p),Object.defineProperty(exports.MyLibrary=exports.MyLibrary||{},\\"__esModule\\",{value:!0})})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_fdc7b1aa4223e178b616.js": "console.log(\\"Hello world!\\"),Object.defineProperty(exports.MyLibrary=exports.MyLibrary||{},\\"__esModule\\",{value:!0});",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_90247274377f248cf2a0.js": "(()=>{var e,r,o=document.currentScript;r={},e=o?o.src:\\"\\",r.p=e.slice(0,e.lastIndexOf(\\"/\\")+1),console.log(r.p),Object.defineProperty(exports.MyLibrary=exports.MyLibrary||{},\\"__esModule\\",{value:!0})})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs-static library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	module.exports.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	module.exports.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	module.exports.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	module.exports.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "console.log(\\"Hello world!\\"),module.exports.MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var r,e,c=document.currentScript;e={},r=c?c.src:\\"\\",e.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(e.p),module.exports.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_4618d8f04314a0c07b24.js": "console.log(\\"Hello world!\\"),module.exports.MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_1146d6514379b550ffe0.js": "(()=>{var r,e,c=document.currentScript;e={},r=c?c.src:\\"\\",e.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(e.p),module.exports.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles commonjs2 library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	self.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	self.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	self.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	self.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "console.log(\\"Hello world!\\"),self.MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var r,c,e=document.currentScript;c={},r=e?e.src:\\"\\",c.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(c.p),self.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_7d39ca5328225a0694e5.js": "console.log(\\"Hello world!\\"),self.MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_2a005bee247e00a0a3f2.js": "(()=>{var r,c,e=document.currentScript;c={},r=e?e.src:\\"\\",c.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(c.p),self.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles global library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
MyLibrary(/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
);",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
MyLibrary(/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
)})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
MyLibrary(/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
);",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
MyLibrary(/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
)})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "MyLibrary((console.log(\\"Hello world!\\"),{}));",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var r,c,e=document.currentScript;MyLibrary((c={},r=e?e.src:\\"\\",c.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(c.p),{}))})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_f119a2e1669e0baf47d0.js": "MyLibrary((console.log(\\"Hello world!\\"),{}));",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_a9d1cef220b5e7f93a8e.js": "(()=>{var r,c,e=document.currentScript;MyLibrary((c={},r=e?e.src:\\"\\",c.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(c.p),{}))})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles jsonp library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	self.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	self.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	self.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	self.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "console.log(\\"Hello world!\\"),self.MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var r,c,e=document.currentScript;c={},r=e?e.src:\\"\\",c.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(c.p),self.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_7d39ca5328225a0694e5.js": "console.log(\\"Hello world!\\"),self.MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_2a005bee247e00a0a3f2.js": "(()=>{var r,c,e=document.currentScript;c={},r=e?e.src:\\"\\",c.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(c.p),self.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles self library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
System.register(\\"MyLibrary\\", [], function(__WEBPACK_DYNAMIC_EXPORT__, __system_context__) {


	return {

		execute: function() {
			__WEBPACK_DYNAMIC_EXPORT__(
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()

			);
		}
	};
});",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
System.register(\\"MyLibrary\\", [], function(__WEBPACK_DYNAMIC_EXPORT__, __system_context__) {


	return {

		execute: function() {
			__WEBPACK_DYNAMIC_EXPORT__(
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()

			);
		}
	};
})})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
System.register(\\"MyLibrary\\", [], function(__WEBPACK_DYNAMIC_EXPORT__, __system_context__) {


	return {

		execute: function() {
			__WEBPACK_DYNAMIC_EXPORT__(
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()

			);
		}
	};
});",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
System.register(\\"MyLibrary\\", [], function(__WEBPACK_DYNAMIC_EXPORT__, __system_context__) {


	return {

		execute: function() {
			__WEBPACK_DYNAMIC_EXPORT__(
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()

			);
		}
	};
})})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "System.register(\\"MyLibrary\\",[],(function(e,o){return{execute:function(){e((console.log(\\"Hello world!\\"),{}))}}}));",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var e=document.currentScript;System.register(\\"MyLibrary\\",[],(function(r,t){return{execute:function(){var t,c;r((c={},t=e?e.src:\\"\\",c.p=t.slice(0,t.lastIndexOf(\\"/\\")+1),console.log(c.p),{}))}}}))})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_7d81fbd36473e27aa0fb.js": "System.register(\\"MyLibrary\\",[],(function(e,o){return{execute:function(){e((console.log(\\"Hello world!\\"),{}))}}}));",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_1a45796a396297604c1d.js": "(()=>{var e=document.currentScript;System.register(\\"MyLibrary\\",[],(function(r,t){return{execute:function(){var t,c;r((c={},t=e?e.src:\\"\\",c.p=t.slice(0,t.lastIndexOf(\\"/\\")+1),console.log(c.p),{}))}}}))})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles system library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	this.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	this.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	this.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	this.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{console.log(\\"Hello world!\\"),this.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var r=document.currentScript;(()=>{var c,e={};c=r?r.src:\\"\\",e.p=c.slice(0,c.lastIndexOf(\\"/\\")+1),console.log(e.p),this.MyLibrary={}})()})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_4d6fb5abdd3eb7fe4115.js": "(()=>{console.log(\\"Hello world!\\"),this.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_c6197810253dab934cb5.js": "(()=>{var r=document.currentScript;(()=>{var c,e={};c=r?r.src:\\"\\",e.p=c.slice(0,c.lastIndexOf(\\"/\\")+1),console.log(e.p),this.MyLibrary={}})()})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles this library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports[\\"MyLibrary\\"] = factory();
	else
		root[\\"MyLibrary\\"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports[\\"MyLibrary\\"] = factory();
	else
		root[\\"MyLibrary\\"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
})})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports[\\"MyLibrary\\"] = factory();
	else
		root[\\"MyLibrary\\"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports[\\"MyLibrary\\"] = factory();
	else
		root[\\"MyLibrary\\"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
})})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "!function(e,o){\\"object\\"==typeof exports&&\\"object\\"==typeof module?module.exports=o():\\"function\\"==typeof define&&define.amd?define([],o):\\"object\\"==typeof exports?exports.MyLibrary=o():e.MyLibrary=o()}(self,(()=>(console.log(\\"Hello world!\\"),{})));",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var e,o,t=document.currentScript;e=self,o=()=>{return o={},e=t?t.src:\\"\\",o.p=e.slice(0,e.lastIndexOf(\\"/\\")+1),console.log(o.p),{};var e,o},\\"object\\"==typeof exports&&\\"object\\"==typeof module?module.exports=o():\\"function\\"==typeof define&&define.amd?define([],o):\\"object\\"==typeof exports?exports.MyLibrary=o():e.MyLibrary=o()})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_8c43c348dc21118df193.js": "!function(e,o){\\"object\\"==typeof exports&&\\"object\\"==typeof module?module.exports=o():\\"function\\"==typeof define&&define.amd?define([],o):\\"object\\"==typeof exports?exports.MyLibrary=o():e.MyLibrary=o()}(self,(()=>(console.log(\\"Hello world!\\"),{})));",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_a6627e23f74d93a203db.js": "(()=>{var e,o,t=document.currentScript;e=self,o=()=>{return o={},e=t?t.src:\\"\\",o.p=e.slice(0,e.lastIndexOf(\\"/\\")+1),console.log(o.p),{};var e,o},\\"object\\"==typeof exports&&\\"object\\"==typeof module?module.exports=o():\\"function\\"==typeof define&&define.amd?define([],o):\\"object\\"==typeof exports?exports.MyLibrary=o():e.MyLibrary=o()})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports[\\"MyLibrary\\"] = factory();
	else
		root[\\"MyLibrary\\"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports[\\"MyLibrary\\"] = factory();
	else
		root[\\"MyLibrary\\"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
})})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports[\\"MyLibrary\\"] = factory();
	else
		root[\\"MyLibrary\\"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports[\\"MyLibrary\\"] = factory();
	else
		root[\\"MyLibrary\\"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
})})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "!function(e,o){\\"object\\"==typeof exports&&\\"object\\"==typeof module?module.exports=o():\\"function\\"==typeof define&&define.amd?define([],o):\\"object\\"==typeof exports?exports.MyLibrary=o():e.MyLibrary=o()}(self,(()=>(console.log(\\"Hello world!\\"),{})));",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var e,o,t=document.currentScript;e=self,o=()=>{return o={},e=t?t.src:\\"\\",o.p=e.slice(0,e.lastIndexOf(\\"/\\")+1),console.log(o.p),{};var e,o},\\"object\\"==typeof exports&&\\"object\\"==typeof module?module.exports=o():\\"function\\"==typeof define&&define.amd?define([],o):\\"object\\"==typeof exports?exports.MyLibrary=o():e.MyLibrary=o()})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_8c43c348dc21118df193.js": "!function(e,o){\\"object\\"==typeof exports&&\\"object\\"==typeof module?module.exports=o():\\"function\\"==typeof define&&define.amd?define([],o):\\"object\\"==typeof exports?exports.MyLibrary=o():e.MyLibrary=o()}(self,(()=>(console.log(\\"Hello world!\\"),{})));",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_a6627e23f74d93a203db.js": "(()=>{var e,o,t=document.currentScript;e=self,o=()=>{return o={},e=t?t.src:\\"\\",o.p=e.slice(0,e.lastIndexOf(\\"/\\")+1),console.log(o.p),{};var e,o},\\"object\\"==typeof exports&&\\"object\\"==typeof module?module.exports=o():\\"function\\"==typeof define&&define.amd?define([],o):\\"object\\"==typeof exports?exports.MyLibrary=o():e.MyLibrary=o()})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles umd2 library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
var MyLibrary;
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
var MyLibrary;
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (development) (uses public path): Errors 1`] = `
Array [
  Object {
    "message": "The \\"var\\" output.library.type is not supported by the SetPublicPathCurrentScriptPlugin plugin. Including this plugin with produce unexpected or invalid results.",
  },
]
`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
var MyLibrary;
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
var MyLibrary;
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (development+hash) (uses public path): Errors 1`] = `
Array [
  Object {
    "message": "The \\"var\\" output.library.type is not supported by the SetPublicPathCurrentScriptPlugin plugin. Including this plugin with produce unexpected or invalid results.",
  },
]
`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "var MyLibrary;console.log(\\"Hello world!\\"),MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (production) (uses public path): Content 1`] = `Object {}`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (production) (uses public path): Errors 1`] = `
Array [
  Object {
    "message": "The \\"var\\" output.library.type is not supported by the SetPublicPathCurrentScriptPlugin plugin. Including this plugin with produce unexpected or invalid results.",
  },
]
`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_cdf966d89dde9e0e6511.js": "var MyLibrary;console.log(\\"Hello world!\\"),MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (production+hash) (uses public path): Content 1`] = `Object {}`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (production+hash) (uses public path): Errors 1`] = `
Array [
  Object {
    "message": "The \\"var\\" output.library.type is not supported by the SetPublicPathCurrentScriptPlugin plugin. Including this plugin with produce unexpected or invalid results.",
  },
]
`;

exports[`SetPublicPathCurrentScriptPlugin Handles var library output (production+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (development) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	window.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (development) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (development) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (development) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	window.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (development) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (development) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (development+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "/*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ (() => {

eval(\\"console.log(\\\\\\"Hello world!\\\\\\");\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"]();
/******/ 	window.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (development+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (development+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (development+hash) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{ var __RUSHSTACK_CURRENT_SCRIPT__ = document.currentScript; /*
 * ATTENTION: The \\"eval\\" devtool has been used (maybe by default in mode: \\"development\\").
 * This devtool is neither made for production nor for readable output files.
 * It uses \\"eval()\\" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with \\"devtool: false\\".
 * If you are looking for production-ready output files, see mode: \\"production\\" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ \\"../../../../../../entry.js\\":
/*!**********************************!*\\\\
  !*** ../../../../../../entry.js ***!
  \\\\**********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(\\"console.log(__webpack_require__.p);\\\\n\\\\n//# sourceURL=webpack://MyLibrary/../../../../../../entry.js?\\");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var _publicPath = __RUSHSTACK_CURRENT_SCRIPT__ ? __RUSHSTACK_CURRENT_SCRIPT__.src : '';
/******/ 		__webpack_require__.p = _publicPath.slice(0, _publicPath.lastIndexOf('/') + 1);
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[\\"../../../../../../entry.js\\"](0, __webpack_exports__, __webpack_require__);
/******/ 	window.MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
})();;",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (development+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (development+hash) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (production) (doesn't use public path): Content 1`] = `
Object {
  "/release/main.js": "console.log(\\"Hello world!\\"),window.MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (production) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (production) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (production) (uses public path): Content 1`] = `
Object {
  "/release/main.js": "(()=>{var r,c,e=document.currentScript;c={},r=e?e.src:\\"\\",c.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(c.p),window.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (production) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (production) (uses public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (production+hash) (doesn't use public path): Content 1`] = `
Object {
  "/release/main_5e7a9248e729d9296340.js": "console.log(\\"Hello world!\\"),window.MyLibrary={};",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (production+hash) (doesn't use public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (production+hash) (doesn't use public path): Warnings 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (production+hash) (uses public path): Content 1`] = `
Object {
  "/release/main_b1349b02271e8b1b9101.js": "(()=>{var r,c,e=document.currentScript;c={},r=e?e.src:\\"\\",c.p=r.slice(0,r.lastIndexOf(\\"/\\")+1),console.log(c.p),window.MyLibrary={}})();",
}
`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (production+hash) (uses public path): Errors 1`] = `Array []`;

exports[`SetPublicPathCurrentScriptPlugin Handles window library output (production+hash) (uses public path): Warnings 1`] = `Array []`;
