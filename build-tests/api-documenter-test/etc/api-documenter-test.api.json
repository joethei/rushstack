{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "[test mode]",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@docCategory",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@myCustomTag",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true,
        "@docCategory": true,
        "@myCustomTag": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "api-documenter-test!",
  "docComment": "/**\n * api-extractor-test-05\n *\n * This project tests various documentation generation scenarios and doc comment syntaxes.\n *\n * @packageDocumentation\n */\n",
  "name": "api-documenter-test",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "api-documenter-test!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "api-documenter-test!AbstractClass:class",
          "docComment": "/**\n * Some abstract class with abstract members.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractClass "
            }
          ],
          "fileUrlPath": "src/AbstractClass.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractClass",
          "preserveMemberOrder": false,
          "members": [],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "api-documenter-test!Constraint:interface",
          "docComment": "/**\n * Type parameter constraint used by test case below.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Constraint "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "name": "Constraint",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "api-documenter-test!constVariable:var",
          "docComment": "/**\n * An exported variable declaration.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "constVariable: "
            },
            {
              "kind": "Content",
              "text": "number"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "constVariable",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "api-documenter-test!DecoratorExample:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DecoratorExample "
            }
          ],
          "fileUrlPath": "src/DecoratorExample.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DecoratorExample",
          "preserveMemberOrder": false,
          "members": [],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "api-documenter-test!DefaultType:interface",
          "docComment": "/**\n * Type parameter default type used by test case below.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DefaultType "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "name": "DefaultType",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "api-documenter-test!DocBaseClass:class",
          "docComment": "/**\n * Example base class\n *\n * {@docCategory DocBaseClass}\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `DocBaseClass` class.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `DocBaseClass` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DocBaseClass "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DocBaseClass",
          "preserveMemberOrder": false,
          "members": [],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "api-documenter-test!DocClass1:class",
          "docComment": "/**\n * This is an example class.\n *\n * @remarks\n *\n * {@link DocClass1.(exampleFunction:1) | Link to overload 1}\n *\n * {@link DocClass1.(exampleFunction:2) | Link to overload 2}\n *\n * {@docCategory DocClass1}\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `DocClass1` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DocClass1 extends "
            },
            {
              "kind": "Reference",
              "text": "DocBaseClass",
              "canonicalReference": "api-documenter-test!DocBaseClass:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "IDocInterface1",
              "canonicalReference": "api-documenter-test!IDocInterface1:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDocInterface2",
              "canonicalReference": "api-documenter-test!IDocInterface2:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DocClass1",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "api-documenter-test!DocClassInterfaceMerge:class",
          "docComment": "/**\n * Class that merges with interface\n *\n * @remarks\n *\n * {@link (DocClassInterfaceMerge:class) | Link to class}\n *\n * {@link (DocClassInterfaceMerge:interface) | Link to interface}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DocClassInterfaceMerge "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DocClassInterfaceMerge",
          "preserveMemberOrder": false,
          "members": [],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "api-documenter-test!DocClassInterfaceMerge:interface",
          "docComment": "/**\n * Interface that merges with class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DocClassInterfaceMerge "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "name": "DocClassInterfaceMerge",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "api-documenter-test!DocEnum:enum",
          "docComment": "/**\n * Docs for DocEnum\n *\n * {@docCategory SystemEvent}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum DocEnum "
            }
          ],
          "fileUrlPath": "src/DocEnums.ts",
          "releaseTag": "Public",
          "name": "DocEnum",
          "preserveMemberOrder": false,
          "members": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "api-documenter-test!DocEnumNamespaceMerge:enum",
          "docComment": "/**\n * Enum that merges with namespace\n *\n * @remarks\n *\n * {@link (DocEnumNamespaceMerge:enum) | Link to enum}\n *\n * {@link (DocEnumNamespaceMerge:namespace) | Link to namespace}\n *\n * {@link (DocEnumNamespaceMerge:namespace).exampleFunction | Link to function inside namespace}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum DocEnumNamespaceMerge "
            }
          ],
          "fileUrlPath": "src/DocEnums.ts",
          "releaseTag": "Public",
          "name": "DocEnumNamespaceMerge",
          "preserveMemberOrder": false,
          "members": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "api-documenter-test!DocEnumNamespaceMerge:namespace",
          "docComment": "/**\n * Namespace that merges with enum\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace DocEnumNamespaceMerge "
            }
          ],
          "fileUrlPath": "src/DocEnums.ts",
          "releaseTag": "Public",
          "name": "DocEnumNamespaceMerge",
          "preserveMemberOrder": false,
          "members": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "api-documenter-test!EcmaSmbols:namespace",
          "docComment": "/**\n * A namespace containing an ECMAScript symbol\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace EcmaSmbols "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "name": "EcmaSmbols",
          "preserveMemberOrder": false,
          "members": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "api-documenter-test!ExampleDuplicateTypeAlias:type",
          "docComment": "/**\n * A type alias that has duplicate references.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ExampleDuplicateTypeAlias = "
            },
            {
              "kind": "Reference",
              "text": "SystemEvent",
              "canonicalReference": "api-documenter-test!SystemEvent:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "SystemEvent",
              "canonicalReference": "api-documenter-test!SystemEvent:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "releaseTag": "Public",
          "name": "ExampleDuplicateTypeAlias",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "api-documenter-test!exampleFunction:function(1)",
          "docComment": "/**\n * An exported function with hyperlinked parameters and return value.\n *\n * @param x - an API item that should get hyperlinked\n *\n * @param y - a system type that should NOT get hyperlinked\n *\n * @returns an interface that should get hyperlinked\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function exampleFunction(x: "
            },
            {
              "kind": "Reference",
              "text": "ExampleTypeAlias",
              "canonicalReference": "api-documenter-test!ExampleTypeAlias:type"
            },
            {
              "kind": "Content",
              "text": ", y: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IDocInterface1",
              "canonicalReference": "api-documenter-test!IDocInterface1:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "x",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "y",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "exampleFunction"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "api-documenter-test!ExampleTypeAlias:type",
          "docComment": "/**\n * A type alias\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ExampleTypeAlias = "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<boolean>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "releaseTag": "Public",
          "name": "ExampleTypeAlias",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "api-documenter-test!ExampleUnionTypeAlias:type",
          "docComment": "/**\n * A type alias that references multiple other types.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ExampleUnionTypeAlias = "
            },
            {
              "kind": "Reference",
              "text": "IDocInterface1",
              "canonicalReference": "api-documenter-test!IDocInterface1:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "IDocInterface3",
              "canonicalReference": "api-documenter-test!IDocInterface3:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "releaseTag": "Public",
          "name": "ExampleUnionTypeAlias",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "api-documenter-test!Generic:class",
          "docComment": "/**\n * Generic class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Generic<T> "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": false,
          "name": "Generic",
          "preserveMemberOrder": false,
          "members": [],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "api-documenter-test!GenericTypeAlias:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GenericTypeAlias<T> = "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "releaseTag": "Public",
          "name": "GenericTypeAlias",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "api-documenter-test!IDocInterface1:interface",
          "docComment": "/**\n * {@docCategory DocBaseClass}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocInterface1 "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "name": "IDocInterface1",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "api-documenter-test!IDocInterface2:interface",
          "docComment": "/**\n * {@docCategory DocBaseClass}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocInterface2 extends "
            },
            {
              "kind": "Reference",
              "text": "IDocInterface1",
              "canonicalReference": "api-documenter-test!IDocInterface1:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "name": "IDocInterface2",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "api-documenter-test!IDocInterface3:interface",
          "docComment": "/**\n * Some less common TypeScript declaration kinds.\n *\n * {@docCategory DocClass1}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocInterface3 "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "name": "IDocInterface3",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "api-documenter-test!IDocInterface4:interface",
          "docComment": "/**\n * Type union in an interface.\n *\n * {@docCategory DocClass1}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocInterface4 "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "name": "IDocInterface4",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "api-documenter-test!IDocInterface5:interface",
          "docComment": "/**\n * Interface without inline tag to test custom TOC\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocInterface5 "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "name": "IDocInterface5",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "api-documenter-test!IDocInterface6:interface",
          "docComment": "/**\n * Interface without inline tag to test custom TOC with injection\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocInterface6 "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "name": "IDocInterface6",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "api-documenter-test!IDocInterface7:interface",
          "docComment": "/**\n * Interface for testing optional properties\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocInterface7 "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "name": "IDocInterface7",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "api-documenter-test!OuterNamespace:namespace",
          "docComment": "/**\n * A top-level namespace\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace OuterNamespace "
            }
          ],
          "fileUrlPath": "src/index.ts",
          "releaseTag": "Public",
          "name": "OuterNamespace",
          "preserveMemberOrder": false,
          "members": []
        },
        {
          "kind": "Class",
          "canonicalReference": "api-documenter-test!SystemEvent:class",
          "docComment": "/**\n * A class used to exposed events.\n *\n * {@docCategory SystemEvent}\n *\n * @public @myCustomTag\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SystemEvent "
            }
          ],
          "fileUrlPath": "src/DocClass1.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SystemEvent",
          "preserveMemberOrder": false,
          "members": [],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "api-documenter-test!TypeAlias:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TypeAlias = "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "releaseTag": "Public",
          "name": "TypeAlias",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "api-documenter-test!yamlReferenceUniquenessTest:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function yamlReferenceUniquenessTest(): "
            },
            {
              "kind": "Reference",
              "text": "IDocInterface1",
              "canonicalReference": "api-documenter-test!IDocInterface1:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "yamlReferenceUniquenessTest"
        }
      ]
    }
  ]
}
